/* 
1. 기본
- nesting
- 자기자신 선택 &
- 변수 사용
*/
@import "utils";

.div1{
    width: 100px;
    height: 100px;
    background-color: $color-red;
    .div2{
        width: 50%;
        height: 50%;
        background-color: $color-orange;
        box-shadow: inset $boxShadow; // inset은 안쪽으로 그림자 효과
        .div3{
            width: 50%;
            height: 50%;
            background-color: $color-yellow;
            box-shadow: $boxShadow;
        }

    }

    .btn {
        display: inline-block;
        transition: $animation-duration;
        width: 33%;
        height: 40px;
        font-size: 8px;
        padding: 0;
        color: white;
    
        // .btn.orangered
        &.orangered {
            background-color: orangered;
        }
    
        // .btn--opacity
        &--opacity {
            background-color: $color_blue;
            opacity: 0.5;
            &:hover {
              opacity: 0.2;
            }
        }
      
        &--blue {
            background-color: $color-blue;
        }
    }
}

.container {
    width: 100%;
    background-color: gainsboro;
    margin-bottom: 120px;
    .box1 {
        @include box;
        // &:nth-child(1) {
        //     width: 100px;
        // }
        // &:nth-child(2) {
        //     width: 120px;
        // }
        // &:nth-child(3) {
        //     width: 140px;
        // }
        @for $i from 1 through 3 {
            &:nth-child(#{$i}) { // 문자 사이에 i 끼워넣기 위해서는 #{} 필요
            width: 80px + 20px* $i;
            }
        }
    }

    .circle {
        // @include circle($color-red, 0.8);
        $circleBgColors: ($color-orange, $color-yellow, $color-green);

        // &:nth-of-type(1) {
        //     @include circle($color-red, 0.8);
        // }
        // &:nth-of-type(2) {
        //     @include circle($color-red, 0.8);
        // }
        // &:nth-of-type(3) {
        //     @include circle($color-red, 0.8);
        // }
        @each $el in $circleBgColors{
            // index($리스트, $리스트의 value)
            // 반환값 리스트의 value에 대한 index:1,2,3...
            $index:index($circleBgColors, $el); // $변수명:index메소드
            &:nth-of-type(#{$index}) {
                @include circle($el, 0.8);
            }
        }
    }
    .box2 {
        @include box2();
        &:nth-of-type(4) {
            @include box2 ($color-yellow, 20px, navy);
        }
        &:nth-of-type(5) {
            @include box2 ($color-orange, 30px, black);
        }
    }
}

// 이미지 접근하기
.img-test {
    width: 100px;
    height: 200px;
    border: 1px solid blue;
    &.src-img {
        // background-image 속성은 상대경로
        background-image: url("../assets/main.png");
        // background-image: url("/assets/main.png");
    }

    &.public-img {
        // 상대경로가 아닌 public은 /로부터 접근
        background-image: url("http://localhost:3000/assets/main.png");
    }
}


// 실습 문제
.practice {
    display: flex;
    justify-content: space-evenly;
    div {
        display: flex;
        width: 100px;
        height: 150px;
        border-radius: 10%;
        background-color: $color-blue;
        margin: 50px 0px;
        box-shadow: $boxShadow;
        cursor: pointer;

        // &:nth-child(1) {
        //     background-image: url("/assets/practice1.png");
        //     background-size: contain;
        //     background-repeat: no-repeat;
        //     background-position: center;
        // }
        // &:nth-child(2) {
        //     background-image: url("/assets/practice2.png");
        // }
        // &:nth-child(3) {
        //     background-image: url("/assets/practice3.png");
        // }
        // &:nth-child(4) {
        //     background-image: url("/assets/practice4.png");
        
        @for $i from 1 through 4 {
            &:nth-child(#{$i}) { // 문자 사이에 i 끼워넣기 위해서는 #{} 필요
            background-image: url("/assets/practice#{$i}.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            }
    
        }
    }
}


// 참고. css 코드
.larva {
position: relative;
    .body {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    position: absolute;
        &.body1 {
            top: 100px;
            left: 100px;
            background-color: rgb(0, 0, 166);
            .eye {
                border-radius: 50%;
                top: 130px;
                left: 130px;
                &.eye-white{
                    background-color: white;
                    width: 40px;
                    height: 40px;
                    z-index: 12;
                    .eye-black{
                        background-color: black;
                        width: 20px;
                        height: 20px;
                        z-index: 13;
                        }
                    }
                }
        }

        &.body2 {
            top: 150px;
            left: 160px;
            background-color: rgb(36, 61, 206);
            }
        &.body3 {
            top: 190px;
            left: 200px;
            background-color: rgb(52, 118, 231);
            }
        &.body4 {
            top: 240px;
            left: 220px;
            background-color: rgb(47, 146, 233);
            }
        &.body5 {
            top: 280px;
            left: 280px;
            background-color: rgb(140, 191, 253);
            z-index: 10;
        }
    }
    .grass {
    position: absolute;
    top: 260px;
    left: 0;

    
}
    
}

.moveCircle {
    background-color: antiquewhite;
    display: flex;
    justify-content: space-evenly;
    .pinkCircle {
        border-radius: 50%;
        
    }
}
