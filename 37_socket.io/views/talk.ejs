<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>Talk</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="/socket.io/socket.io.js"></script>

    <style>
      #container {
        background-color: #9bbbd4;
        height: 500px;
        margin-top: 20px;
        padding: 0;
        display: flex;
        flex-direction: column;
      }

      #container header {
        /* text-align: center;
        padding: 20px;
        box-shadow: 0px 2px 2px #7a7a7a20;
        
         */
        width: 100%;
        box-shadow: 0px 2px 2px #7a7a7a20;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-basis: 10%;
        font-size: 30px;
        font-weight: 500;
      }

      /* [chat-content] */
      #container .chat-content {
        padding: 16px;
        overflow-y: auto;
        flex-basis: 80%;
      }

      #container .chat-content div {
        display: flex;
      }
      #container .chat-content #users {
        background-color: none;
        justify-content: center;
        color: dimgray;
      }

      /* chat 말풍선 */
      /* #container .chat-content div {
        display: inline-block;
        box-shadow: 1px 1px 5px #7a7a7a;
        border-radius: 8px;
        padding: 0.3rem;
        margin: 0.5rem 0;
        max-width: 60%;
      } */

      #container .chat-content .send {
        justify-content: flex-end;
      }
      #container .chat-content .receive {
        justify-content: flex-start;
      }
      #container .chat-content .receive p {
        background-color: white;
      }
      #container .chat-content .send p {
        background-color: yellow;
      }
      #container .chat-content div p {
        display: inline-block;
        padding: 4px;
      }

      /* 채팅방 이름 */
      h2 {
        text-align: center;
        padding: 30px;
        box-shadow: 0px 2px 2px #7a7a7a20;
      }

      /* 스크롤 모양 변경*/
      .container #chat-content::-webkit-scrollbar {
        width: 4px;
      }
      .container #chat-content::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 10px;
        padding: 1px;
        margin: 1px;
      }
      .container #chat-content::-webkit-scrollbar-track {
        padding: 1px;

        background-color: #ccc;
        border-radius: 10px;
        box-shadow: inset 0px 0px 2px white;
      }
    </style>
  </head>
  <body>
    <div id="container">
      <header>코코아톡🐻</header>
      <!-- 유저 채팅방 입장 -->
      
      <div class="chat-content" id="chat-content">
        <div id="users"><br /></div>
        <div class="send"><p>내가 보낸 메세지</p></div>
        <div class="receive"><p>남이 보낸 메세지</p></div>
      </div>

      <form id="chat">
        <input type="text" id="message" />
        <button>전송</button>
      </form>
    </div>
    <script>
      const socket = io();

      const send = document.getElementsByClassName("send");
      const receive = document.getElementsByClassName("receive"); // class name 배열로 불러오기 때문에 X
      const chatContent = document.getElementById("chat-content");

      const chatForm = document.getElementById("chat");

      // 채팅방 입장
      const chattingRoom = prompt("채팅방을 입력해주세요.");
      // 유저 이름 입력
      const userName = prompt("유저 이름을 입력해주세요🐻");

      // 유저 join 안내 메세지 출력
      const h2 = document.createElement("h2");
      h2.innerText = `⭐ 채팅방 ${chattingRoom} ⭐`;
      document.querySelector("#chat-content").prepend(h2);

      socket.emit("join", chattingRoom);

      socket.on("user_join_without", (notice) => {
        const p = document.createElement("p");
        p.textContent = notice;
        users.append(p);
      });

      // 유저 이름 보내기
    //   socket.emit("user_name", userName);

      chatForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const input = chatForm.querySelector("#message");
        const message = input.value;
        socket.emit("send_msg", message, userName);

        input.value = "";
      });

      socket.on("receive_msg", (message, id) => {
        // console.log("id>> ",id);
        if (id === socket.id) {
          const p = document.createElement("p");
          const div = document.createElement("div");

          div.className = "send";
          p.textContent = message;
          div.appendChild(p);
          chatContent.appendChild(div);
        } else {
          const p = document.createElement("p");
          const div = document.createElement("div");

          div.className = "receive";
          p.textContent = message;
          div.appendChild(p);
          chatContent.appendChild(div);
        }
      });
    </script>
  </body>
</html>
